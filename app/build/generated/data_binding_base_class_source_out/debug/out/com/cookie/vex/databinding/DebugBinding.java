// Generated by view binder compiler. Do not edit!
package com.cookie.vex.databinding;

import android.view.LayoutInflater;
import android.view.View;
import android.view.ViewGroup;
import android.widget.FrameLayout;
import android.widget.ImageView;
import android.widget.LinearLayout;
import android.widget.ScrollView;
import android.widget.TextView;
import androidx.annotation.NonNull;
import androidx.annotation.Nullable;
import androidx.viewbinding.ViewBinding;
import androidx.viewbinding.ViewBindings;
import com.cookie.vex.R;
import java.lang.NullPointerException;
import java.lang.Override;
import java.lang.String;

public final class DebugBinding implements ViewBinding {
  @NonNull
  private final LinearLayout rootView;

  @NonNull
  public final LinearLayout base;

  @NonNull
  public final LinearLayout content;

  @NonNull
  public final FrameLayout frame;

  @NonNull
  public final ImageView imageBackground;

  @NonNull
  public final TextView info;

  @NonNull
  public final ScrollView scroll;

  @NonNull
  public final TextView textview1;

  private DebugBinding(@NonNull LinearLayout rootView, @NonNull LinearLayout base,
      @NonNull LinearLayout content, @NonNull FrameLayout frame, @NonNull ImageView imageBackground,
      @NonNull TextView info, @NonNull ScrollView scroll, @NonNull TextView textview1) {
    this.rootView = rootView;
    this.base = base;
    this.content = content;
    this.frame = frame;
    this.imageBackground = imageBackground;
    this.info = info;
    this.scroll = scroll;
    this.textview1 = textview1;
  }

  @Override
  @NonNull
  public LinearLayout getRoot() {
    return rootView;
  }

  @NonNull
  public static DebugBinding inflate(@NonNull LayoutInflater inflater) {
    return inflate(inflater, null, false);
  }

  @NonNull
  public static DebugBinding inflate(@NonNull LayoutInflater inflater, @Nullable ViewGroup parent,
      boolean attachToParent) {
    View root = inflater.inflate(R.layout.debug, parent, false);
    if (attachToParent) {
      parent.addView(root);
    }
    return bind(root);
  }

  @NonNull
  public static DebugBinding bind(@NonNull View rootView) {
    // The body of this method is generated in a way you would not otherwise write.
    // This is done to optimize the compiled bytecode for size and performance.
    int id;
    missingId: {
      id = R.id.base;
      LinearLayout base = ViewBindings.findChildViewById(rootView, id);
      if (base == null) {
        break missingId;
      }

      id = R.id.content;
      LinearLayout content = ViewBindings.findChildViewById(rootView, id);
      if (content == null) {
        break missingId;
      }

      id = R.id.frame;
      FrameLayout frame = ViewBindings.findChildViewById(rootView, id);
      if (frame == null) {
        break missingId;
      }

      id = R.id.image_background;
      ImageView imageBackground = ViewBindings.findChildViewById(rootView, id);
      if (imageBackground == null) {
        break missingId;
      }

      id = R.id.info;
      TextView info = ViewBindings.findChildViewById(rootView, id);
      if (info == null) {
        break missingId;
      }

      id = R.id.scroll;
      ScrollView scroll = ViewBindings.findChildViewById(rootView, id);
      if (scroll == null) {
        break missingId;
      }

      id = R.id.textview1;
      TextView textview1 = ViewBindings.findChildViewById(rootView, id);
      if (textview1 == null) {
        break missingId;
      }

      return new DebugBinding((LinearLayout) rootView, base, content, frame, imageBackground, info,
          scroll, textview1);
    }
    String missingId = rootView.getResources().getResourceName(id);
    throw new NullPointerException("Missing required view with ID: ".concat(missingId));
  }
}

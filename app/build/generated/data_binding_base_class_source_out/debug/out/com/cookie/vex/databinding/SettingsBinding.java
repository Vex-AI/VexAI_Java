// Generated by view binder compiler. Do not edit!
package com.cookie.vex.databinding;

import android.view.LayoutInflater;
import android.view.View;
import android.view.ViewGroup;
import android.widget.FrameLayout;
import android.widget.ImageView;
import android.widget.LinearLayout;
import android.widget.RelativeLayout;
import android.widget.TextView;
import androidx.annotation.NonNull;
import androidx.annotation.Nullable;
import androidx.cardview.widget.CardView;
import androidx.viewbinding.ViewBinding;
import androidx.viewbinding.ViewBindings;
import com.cookie.vex.R;
import com.google.android.material.button.MaterialButton;
import java.lang.NullPointerException;
import java.lang.Override;
import java.lang.String;

public final class SettingsBinding implements ViewBinding {
  @NonNull
  private final LinearLayout rootView;

  @NonNull
  public final RelativeLayout background;

  @NonNull
  public final CardView card;

  @NonNull
  public final CardView cardSinopse;

  @NonNull
  public final LinearLayout config;

  @NonNull
  public final TextView configText;

  @NonNull
  public final LinearLayout content;

  @NonNull
  public final MaterialButton exportFile;

  @NonNull
  public final ImageView imageBackground;

  @NonNull
  public final MaterialButton importFile;

  @NonNull
  public final FrameLayout linear1;

  @NonNull
  public final LinearLayout ovalLinear;

  private SettingsBinding(@NonNull LinearLayout rootView, @NonNull RelativeLayout background,
      @NonNull CardView card, @NonNull CardView cardSinopse, @NonNull LinearLayout config,
      @NonNull TextView configText, @NonNull LinearLayout content,
      @NonNull MaterialButton exportFile, @NonNull ImageView imageBackground,
      @NonNull MaterialButton importFile, @NonNull FrameLayout linear1,
      @NonNull LinearLayout ovalLinear) {
    this.rootView = rootView;
    this.background = background;
    this.card = card;
    this.cardSinopse = cardSinopse;
    this.config = config;
    this.configText = configText;
    this.content = content;
    this.exportFile = exportFile;
    this.imageBackground = imageBackground;
    this.importFile = importFile;
    this.linear1 = linear1;
    this.ovalLinear = ovalLinear;
  }

  @Override
  @NonNull
  public LinearLayout getRoot() {
    return rootView;
  }

  @NonNull
  public static SettingsBinding inflate(@NonNull LayoutInflater inflater) {
    return inflate(inflater, null, false);
  }

  @NonNull
  public static SettingsBinding inflate(@NonNull LayoutInflater inflater,
      @Nullable ViewGroup parent, boolean attachToParent) {
    View root = inflater.inflate(R.layout.settings, parent, false);
    if (attachToParent) {
      parent.addView(root);
    }
    return bind(root);
  }

  @NonNull
  public static SettingsBinding bind(@NonNull View rootView) {
    // The body of this method is generated in a way you would not otherwise write.
    // This is done to optimize the compiled bytecode for size and performance.
    int id;
    missingId: {
      id = R.id.background;
      RelativeLayout background = ViewBindings.findChildViewById(rootView, id);
      if (background == null) {
        break missingId;
      }

      id = R.id.card;
      CardView card = ViewBindings.findChildViewById(rootView, id);
      if (card == null) {
        break missingId;
      }

      id = R.id.card_sinopse;
      CardView cardSinopse = ViewBindings.findChildViewById(rootView, id);
      if (cardSinopse == null) {
        break missingId;
      }

      id = R.id.config;
      LinearLayout config = ViewBindings.findChildViewById(rootView, id);
      if (config == null) {
        break missingId;
      }

      id = R.id.config_text;
      TextView configText = ViewBindings.findChildViewById(rootView, id);
      if (configText == null) {
        break missingId;
      }

      id = R.id.content;
      LinearLayout content = ViewBindings.findChildViewById(rootView, id);
      if (content == null) {
        break missingId;
      }

      id = R.id.export_file;
      MaterialButton exportFile = ViewBindings.findChildViewById(rootView, id);
      if (exportFile == null) {
        break missingId;
      }

      id = R.id.image_background;
      ImageView imageBackground = ViewBindings.findChildViewById(rootView, id);
      if (imageBackground == null) {
        break missingId;
      }

      id = R.id.import_file;
      MaterialButton importFile = ViewBindings.findChildViewById(rootView, id);
      if (importFile == null) {
        break missingId;
      }

      id = R.id.linear1;
      FrameLayout linear1 = ViewBindings.findChildViewById(rootView, id);
      if (linear1 == null) {
        break missingId;
      }

      id = R.id.oval_linear;
      LinearLayout ovalLinear = ViewBindings.findChildViewById(rootView, id);
      if (ovalLinear == null) {
        break missingId;
      }

      return new SettingsBinding((LinearLayout) rootView, background, card, cardSinopse, config,
          configText, content, exportFile, imageBackground, importFile, linear1, ovalLinear);
    }
    String missingId = rootView.getResources().getResourceName(id);
    throw new NullPointerException("Missing required view with ID: ".concat(missingId));
  }
}

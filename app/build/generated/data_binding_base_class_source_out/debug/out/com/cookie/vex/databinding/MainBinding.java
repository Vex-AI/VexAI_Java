// Generated by view binder compiler. Do not edit!
package com.cookie.vex.databinding;

import android.view.LayoutInflater;
import android.view.View;
import android.view.ViewGroup;
import android.widget.FrameLayout;
import android.widget.ImageView;
import android.widget.LinearLayout;
import android.widget.TextView;
import androidx.annotation.NonNull;
import androidx.annotation.Nullable;
import androidx.viewbinding.ViewBinding;
import androidx.viewbinding.ViewBindings;
import com.cookie.vex.R;
import com.google.android.material.card.MaterialCardView;
import com.iitr.kaishu.nsidedprogressbar.NSidedProgressBar;
import java.lang.NullPointerException;
import java.lang.Override;
import java.lang.String;

public final class MainBinding implements ViewBinding {
  @NonNull
  private final LinearLayout rootView;

  @NonNull
  public final LinearLayout base;

  @NonNull
  public final MaterialCardView cardVector;

  @NonNull
  public final TextView dicaTxt;

  @NonNull
  public final FrameLayout frame;

  @NonNull
  public final ImageView imageBackground;

  @NonNull
  public final NSidedProgressBar pgBar;

  @NonNull
  public final ImageView vector;

  private MainBinding(@NonNull LinearLayout rootView, @NonNull LinearLayout base,
      @NonNull MaterialCardView cardVector, @NonNull TextView dicaTxt, @NonNull FrameLayout frame,
      @NonNull ImageView imageBackground, @NonNull NSidedProgressBar pgBar,
      @NonNull ImageView vector) {
    this.rootView = rootView;
    this.base = base;
    this.cardVector = cardVector;
    this.dicaTxt = dicaTxt;
    this.frame = frame;
    this.imageBackground = imageBackground;
    this.pgBar = pgBar;
    this.vector = vector;
  }

  @Override
  @NonNull
  public LinearLayout getRoot() {
    return rootView;
  }

  @NonNull
  public static MainBinding inflate(@NonNull LayoutInflater inflater) {
    return inflate(inflater, null, false);
  }

  @NonNull
  public static MainBinding inflate(@NonNull LayoutInflater inflater, @Nullable ViewGroup parent,
      boolean attachToParent) {
    View root = inflater.inflate(R.layout.main, parent, false);
    if (attachToParent) {
      parent.addView(root);
    }
    return bind(root);
  }

  @NonNull
  public static MainBinding bind(@NonNull View rootView) {
    // The body of this method is generated in a way you would not otherwise write.
    // This is done to optimize the compiled bytecode for size and performance.
    int id;
    missingId: {
      id = R.id.base;
      LinearLayout base = ViewBindings.findChildViewById(rootView, id);
      if (base == null) {
        break missingId;
      }

      id = R.id.card_vector;
      MaterialCardView cardVector = ViewBindings.findChildViewById(rootView, id);
      if (cardVector == null) {
        break missingId;
      }

      id = R.id.dica_txt;
      TextView dicaTxt = ViewBindings.findChildViewById(rootView, id);
      if (dicaTxt == null) {
        break missingId;
      }

      id = R.id.frame;
      FrameLayout frame = ViewBindings.findChildViewById(rootView, id);
      if (frame == null) {
        break missingId;
      }

      id = R.id.image_background;
      ImageView imageBackground = ViewBindings.findChildViewById(rootView, id);
      if (imageBackground == null) {
        break missingId;
      }

      id = R.id.pg_bar;
      NSidedProgressBar pgBar = ViewBindings.findChildViewById(rootView, id);
      if (pgBar == null) {
        break missingId;
      }

      id = R.id.vector;
      ImageView vector = ViewBindings.findChildViewById(rootView, id);
      if (vector == null) {
        break missingId;
      }

      return new MainBinding((LinearLayout) rootView, base, cardVector, dicaTxt, frame,
          imageBackground, pgBar, vector);
    }
    String missingId = rootView.getResources().getResourceName(id);
    throw new NullPointerException("Missing required view with ID: ".concat(missingId));
  }
}

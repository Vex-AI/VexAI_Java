// Generated by view binder compiler. Do not edit!
package com.cookie.vex.databinding;

import android.view.LayoutInflater;
import android.view.View;
import android.view.ViewGroup;
import android.widget.ImageView;
import android.widget.LinearLayout;
import android.widget.TextView;
import androidx.annotation.NonNull;
import androidx.annotation.Nullable;
import androidx.cardview.widget.CardView;
import androidx.viewbinding.ViewBinding;
import androidx.viewbinding.ViewBindings;
import com.cookie.vex.R;
import com.google.android.material.button.MaterialButton;
import java.lang.NullPointerException;
import java.lang.Override;
import java.lang.String;

public final class TermsBinding implements ViewBinding {
  @NonNull
  private final LinearLayout rootView;

  @NonNull
  public final MaterialButton back;

  @NonNull
  public final CardView cardview1;

  @NonNull
  public final LinearLayout linear1;

  @NonNull
  public final ImageView linear2;

  @NonNull
  public final MaterialButton politica;

  @NonNull
  public final MaterialButton termos;

  @NonNull
  public final TextView texto;

  private TermsBinding(@NonNull LinearLayout rootView, @NonNull MaterialButton back,
      @NonNull CardView cardview1, @NonNull LinearLayout linear1, @NonNull ImageView linear2,
      @NonNull MaterialButton politica, @NonNull MaterialButton termos, @NonNull TextView texto) {
    this.rootView = rootView;
    this.back = back;
    this.cardview1 = cardview1;
    this.linear1 = linear1;
    this.linear2 = linear2;
    this.politica = politica;
    this.termos = termos;
    this.texto = texto;
  }

  @Override
  @NonNull
  public LinearLayout getRoot() {
    return rootView;
  }

  @NonNull
  public static TermsBinding inflate(@NonNull LayoutInflater inflater) {
    return inflate(inflater, null, false);
  }

  @NonNull
  public static TermsBinding inflate(@NonNull LayoutInflater inflater, @Nullable ViewGroup parent,
      boolean attachToParent) {
    View root = inflater.inflate(R.layout.terms, parent, false);
    if (attachToParent) {
      parent.addView(root);
    }
    return bind(root);
  }

  @NonNull
  public static TermsBinding bind(@NonNull View rootView) {
    // The body of this method is generated in a way you would not otherwise write.
    // This is done to optimize the compiled bytecode for size and performance.
    int id;
    missingId: {
      id = R.id.back;
      MaterialButton back = ViewBindings.findChildViewById(rootView, id);
      if (back == null) {
        break missingId;
      }

      id = R.id.cardview1;
      CardView cardview1 = ViewBindings.findChildViewById(rootView, id);
      if (cardview1 == null) {
        break missingId;
      }

      id = R.id.linear1;
      LinearLayout linear1 = ViewBindings.findChildViewById(rootView, id);
      if (linear1 == null) {
        break missingId;
      }

      id = R.id.linear2;
      ImageView linear2 = ViewBindings.findChildViewById(rootView, id);
      if (linear2 == null) {
        break missingId;
      }

      id = R.id.politica;
      MaterialButton politica = ViewBindings.findChildViewById(rootView, id);
      if (politica == null) {
        break missingId;
      }

      id = R.id.termos;
      MaterialButton termos = ViewBindings.findChildViewById(rootView, id);
      if (termos == null) {
        break missingId;
      }

      id = R.id.texto;
      TextView texto = ViewBindings.findChildViewById(rootView, id);
      if (texto == null) {
        break missingId;
      }

      return new TermsBinding((LinearLayout) rootView, back, cardview1, linear1, linear2, politica,
          termos, texto);
    }
    String missingId = rootView.getResources().getResourceName(id);
    throw new NullPointerException("Missing required view with ID: ".concat(missingId));
  }
}

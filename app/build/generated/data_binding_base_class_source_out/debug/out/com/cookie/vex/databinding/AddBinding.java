// Generated by view binder compiler. Do not edit!
package com.cookie.vex.databinding;

import android.view.LayoutInflater;
import android.view.View;
import android.view.ViewGroup;
import android.widget.CheckBox;
import android.widget.EditText;
import android.widget.FrameLayout;
import android.widget.ImageView;
import android.widget.LinearLayout;
import android.widget.TextView;
import androidx.annotation.NonNull;
import androidx.annotation.Nullable;
import androidx.viewbinding.ViewBinding;
import androidx.viewbinding.ViewBindings;
import com.cookie.vex.R;
import com.google.android.material.button.MaterialButton;
import java.lang.NullPointerException;
import java.lang.Override;
import java.lang.String;

public final class AddBinding implements ViewBinding {
  @NonNull
  private final LinearLayout rootView;

  @NonNull
  public final LinearLayout base;

  @NonNull
  public final CheckBox clear;

  @NonNull
  public final FrameLayout frame;

  @NonNull
  public final ImageView imageBackground;

  @NonNull
  public final LinearLayout linearAd;

  @NonNull
  public final LinearLayout linearClear;

  @NonNull
  public final EditText pgs;

  @NonNull
  public final LinearLayout roundBase;

  @NonNull
  public final LinearLayout roundPgs;

  @NonNull
  public final LinearLayout roundRps;

  @NonNull
  public final EditText rps;

  @NonNull
  public final MaterialButton save;

  @NonNull
  public final TextView tags;

  @NonNull
  public final TextView textLearn;

  @NonNull
  public final TextView textPgs;

  @NonNull
  public final TextView textRps;

  @NonNull
  public final TextView textview7;

  @NonNull
  public final ImageView vectorDelete1;

  @NonNull
  public final ImageView vectorDelete2;

  private AddBinding(@NonNull LinearLayout rootView, @NonNull LinearLayout base,
      @NonNull CheckBox clear, @NonNull FrameLayout frame, @NonNull ImageView imageBackground,
      @NonNull LinearLayout linearAd, @NonNull LinearLayout linearClear, @NonNull EditText pgs,
      @NonNull LinearLayout roundBase, @NonNull LinearLayout roundPgs,
      @NonNull LinearLayout roundRps, @NonNull EditText rps, @NonNull MaterialButton save,
      @NonNull TextView tags, @NonNull TextView textLearn, @NonNull TextView textPgs,
      @NonNull TextView textRps, @NonNull TextView textview7, @NonNull ImageView vectorDelete1,
      @NonNull ImageView vectorDelete2) {
    this.rootView = rootView;
    this.base = base;
    this.clear = clear;
    this.frame = frame;
    this.imageBackground = imageBackground;
    this.linearAd = linearAd;
    this.linearClear = linearClear;
    this.pgs = pgs;
    this.roundBase = roundBase;
    this.roundPgs = roundPgs;
    this.roundRps = roundRps;
    this.rps = rps;
    this.save = save;
    this.tags = tags;
    this.textLearn = textLearn;
    this.textPgs = textPgs;
    this.textRps = textRps;
    this.textview7 = textview7;
    this.vectorDelete1 = vectorDelete1;
    this.vectorDelete2 = vectorDelete2;
  }

  @Override
  @NonNull
  public LinearLayout getRoot() {
    return rootView;
  }

  @NonNull
  public static AddBinding inflate(@NonNull LayoutInflater inflater) {
    return inflate(inflater, null, false);
  }

  @NonNull
  public static AddBinding inflate(@NonNull LayoutInflater inflater, @Nullable ViewGroup parent,
      boolean attachToParent) {
    View root = inflater.inflate(R.layout.add, parent, false);
    if (attachToParent) {
      parent.addView(root);
    }
    return bind(root);
  }

  @NonNull
  public static AddBinding bind(@NonNull View rootView) {
    // The body of this method is generated in a way you would not otherwise write.
    // This is done to optimize the compiled bytecode for size and performance.
    int id;
    missingId: {
      id = R.id.base;
      LinearLayout base = ViewBindings.findChildViewById(rootView, id);
      if (base == null) {
        break missingId;
      }

      id = R.id.clear;
      CheckBox clear = ViewBindings.findChildViewById(rootView, id);
      if (clear == null) {
        break missingId;
      }

      id = R.id.frame;
      FrameLayout frame = ViewBindings.findChildViewById(rootView, id);
      if (frame == null) {
        break missingId;
      }

      id = R.id.image_background;
      ImageView imageBackground = ViewBindings.findChildViewById(rootView, id);
      if (imageBackground == null) {
        break missingId;
      }

      id = R.id.linear_ad;
      LinearLayout linearAd = ViewBindings.findChildViewById(rootView, id);
      if (linearAd == null) {
        break missingId;
      }

      id = R.id.linear_clear;
      LinearLayout linearClear = ViewBindings.findChildViewById(rootView, id);
      if (linearClear == null) {
        break missingId;
      }

      id = R.id.pgs;
      EditText pgs = ViewBindings.findChildViewById(rootView, id);
      if (pgs == null) {
        break missingId;
      }

      id = R.id.round_base;
      LinearLayout roundBase = ViewBindings.findChildViewById(rootView, id);
      if (roundBase == null) {
        break missingId;
      }

      id = R.id.round_pgs;
      LinearLayout roundPgs = ViewBindings.findChildViewById(rootView, id);
      if (roundPgs == null) {
        break missingId;
      }

      id = R.id.round_rps;
      LinearLayout roundRps = ViewBindings.findChildViewById(rootView, id);
      if (roundRps == null) {
        break missingId;
      }

      id = R.id.rps;
      EditText rps = ViewBindings.findChildViewById(rootView, id);
      if (rps == null) {
        break missingId;
      }

      id = R.id.save;
      MaterialButton save = ViewBindings.findChildViewById(rootView, id);
      if (save == null) {
        break missingId;
      }

      id = R.id.tags;
      TextView tags = ViewBindings.findChildViewById(rootView, id);
      if (tags == null) {
        break missingId;
      }

      id = R.id.text_learn;
      TextView textLearn = ViewBindings.findChildViewById(rootView, id);
      if (textLearn == null) {
        break missingId;
      }

      id = R.id.text_pgs;
      TextView textPgs = ViewBindings.findChildViewById(rootView, id);
      if (textPgs == null) {
        break missingId;
      }

      id = R.id.text_rps;
      TextView textRps = ViewBindings.findChildViewById(rootView, id);
      if (textRps == null) {
        break missingId;
      }

      id = R.id.textview7;
      TextView textview7 = ViewBindings.findChildViewById(rootView, id);
      if (textview7 == null) {
        break missingId;
      }

      id = R.id.vector_delete1;
      ImageView vectorDelete1 = ViewBindings.findChildViewById(rootView, id);
      if (vectorDelete1 == null) {
        break missingId;
      }

      id = R.id.vector_delete2;
      ImageView vectorDelete2 = ViewBindings.findChildViewById(rootView, id);
      if (vectorDelete2 == null) {
        break missingId;
      }

      return new AddBinding((LinearLayout) rootView, base, clear, frame, imageBackground, linearAd,
          linearClear, pgs, roundBase, roundPgs, roundRps, rps, save, tags, textLearn, textPgs,
          textRps, textview7, vectorDelete1, vectorDelete2);
    }
    String missingId = rootView.getResources().getResourceName(id);
    throw new NullPointerException("Missing required view with ID: ".concat(missingId));
  }
}
